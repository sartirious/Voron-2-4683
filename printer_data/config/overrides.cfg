############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> ERCF MCUs are called "ercf" 

# ------------------------------------------------------------------------------------------

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line


#[gcode_macro PRINT_START]
#gcode:
#    START_PRINT


#-------------------------#
# config/kinematics/corexy.cfg
#-------------------------#
[printer]
kinematics: corexy
max_velocity: 600
max_accel: 8000
max_z_velocity: 250
max_z_accel: 1000
# minimum_cruise_ratio: 0.5 # This left commented to not break older Klipper versions
#square_corner_velocity: 5.0


#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
control: pid
pid_kp: 20.773
pid_ki: 2.007 
pid_kd: 53.750
max_temp: 275

[heater_bed]
control: pid
pid_kp: 58.486
pid_ki: 1.354
pid_kd: 631.645

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
# [stepper_z]
# dir_pin: !Z_DIR

[stepper_z1]
dir_pin: !Z1_DIR

# [stepper_z2]
# dir_pin: !Z2_DIR

[stepper_z3]
dir_pin: !Z3_DIR

#-------------------------#
# config/hardware/axis/size/350mm.cfg
#-------------------------#
#[stepper_x]
#position_min: 0
#position_max: 350
#position_endstop: 350

#[stepper_y]
#position_min: 0
#position_max: 350
#position_endstop: 350

#[stepper_z]
#position_max: 310
#position_min: -5

#-------------------------#
# config/hardware/axis/X/TMC/TMC2209.cfg
#-------------------------#
# X TMC2209 definition
#[tmc2209 stepper_x]
#stealthchop_threshold: 0

#-------------------------#
# config/hardware/axis/X/default_speed.cfg
#-------------------------#
[stepper_x]
homing_speed: 100
#homing_retract_dist: 0

#-------------------------#
# config/hardware/axis/X/default_wiring.cfg
#-------------------------#
#step_pin: X_STEP
#dir_pin: X_DIR
#enable_pin: !X_ENABLE
#endstop_pin: X_STOP

#-------------------------#
# config/hardware/axis/X/1.8deg.cfg
#-------------------------#
[stepper_x]
#rotation_distance: 40
microsteps: 16
#full_steps_per_rotation: 200


#-------------------------#
# config/hardware/axis/Y/TMC/TMC2209.cfg
#-------------------------#
# Y TMC2209 definition
#[tmc2209 stepper_y]
#stealthchop_threshold: 0

#-------------------------#
# config/hardware/axis/Y/default_speed.cfg
#-------------------------#
[stepper_y]
homing_speed: 100
#homing_retract_dist: 0

#-------------------------#
# config/hardware/axis/Y/1.8deg.cfg
#-------------------------#
[stepper_y]
#rotation_distance: 40
microsteps: 16
#full_steps_per_rotation: 200

#-------------------------#
# config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg
#-------------------------#
# Z TMC2209 definition
#[tmc2209 stepper_z]
#stealthchop_threshold: 0

#-------------------------#
# config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg
#-------------------------#
#[tmc2209 stepper_z1]
#stealthchop_threshold: 0

#[tmc2209 stepper_z2]
#stealthchop_threshold: 0

#-------------------------#
# config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg
#-------------------------#
#[tmc2209 stepper_z3]
#stealthchop_threshold: 0

#-------------------------#
# config/hardware/axis/Z/include default_speed.cfg
#-------------------------#
[stepper_z]
homing_speed: 20
#second_homing_speed: 8
#homing_retract_dist: 3.0

#-------------------------#
# config/hardware/extruder/TMC/TMC2209.cfg
#-------------------------#
# Extruder TMC2209 definition
[tmc2209 extruder]
run_current: 0.6
#stealthchop_threshold: 0


#-------------------------#
# config/hardware/extruder/default_wiring.cfg
#-------------------------#
[extruder]
#step_pin: E_STEP
dir_pin: toolhead:E_DIR
#enable_pin: !E_ENABLE
#heater_pin: E_HEATER
#sensor_pin: E_TEMPERATURE

#-------------------------#
# config/hardware/extruder/cw2.cfg
#-------------------------#
[extruder]
# BMG Gear Ratio
# new_rd = previous_rd * mesured_distance / requested_distance
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 16
#full_steps_per_rotation: 200

#nozzle_diameter: 0.400
#max_extrude_only_distance: 110
sensor_type: PT1000
pullup_resistor: 1000
#min_temp: 10
#max_temp: 290
#max_power: 1.0
#min_extrude_temp: 172
#pressure_advance: 0.0600
pressure_advance_smooth_time: 0.040

#-------------------------#
# config/software/firmware_rectraction.cfg
#-------------------------#
#[firmware_retraction]
# G10 to retract and G11 to unrectract
#retract_length: 0.75
# unretract_extra_length: 0
#retract_speed: 35
#unretract_speed: 35


#-------------------------#
# config/hardware/fans/part_fan.cfg
#-------------------------#
[fan]
pin: MCU_STOP7 # for ocotopus pro Endstop 7 header
#MCU_STOP7=PG15
#pin: MCU_HE3
#pin: !MCU_FAN4
#pin: MCU_FAN4
#enable_pin: MCU_HE3
#enable_pin: !MCU_FAN4
kick_start_time: 0.5
max_power: 1 # adjust below 1 if you would like the max speed to be slower
off_below: 0.2 # minimum speed where the fan starts spinning - on octopus pro this is correct - will be lower maybe 0 on mellow Super 8 because of different GPIO pullup and protection resistors
cycle_time: .0005 # = 2khz - CPAP fan driver recommended range is 2-50khz


#-------------------------#
# config/hardware/fans/hotend_fan.cfg
#-------------------------#
#[heater_fan hotend_fan]
#kick_start_time: 0.500
#heater_temp: 45.0

#-------------------------#
# config/hardware/fans/controller_fan.cfg
#-------------------------#
[controller_fan controller_fan]
pin: MCU_FAN0
#kick_start_time: 0.5
#fan_speed: 1.0
#idle_timeout: 60

#-------------------------#
# SB2040 5V fan
#-------------------------#
[controller_fan toolhead_fan]
pin: toolhead:MCU_FAN2
kick_start_time: 0.1
fan_speed: 1.0
heater: heater_bed

#-------------------------#
# config/hardware/probes/voron_tap.cfg
#-------------------------#
[probe]
#pin: ^PROBE_INPUT
#speed: 5
lift_speed: 20
samples: 3
#samples_result: median
#sample_retract_dist: 1.0
samples_tolerance: 0.01
samples_tolerance_retries: 5
z_offset: -1.095

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}


#-------------------------#
# config/software/tilting/qgl_350mm.cfg
#-------------------------#
[quad_gantry_level]
#gantry_corners:
#    -60,-10
#    410,420
points:
    25,25
    25,325
    325,325
    325,25
#speed: 350
horizontal_move_z: 20
#retries: 5
#retry_tolerance: 0.0100

#-------------------------#
# config/software/bed_mesh/bed_mesh_350mm.cfg
#-------------------------#
[bed_mesh]
#speed: 350
horizontal_move_z: 3
mesh_min: 20, 20
mesh_max: 320, 320
probe_count: 5, 5
#fade_start: 0.6
#fade_end: 10.0
#algorithm: bicubic
#zero_reference_position: 175, 175



#-------------------------#
# config/hardware/heated_bed.cfg
#-------------------------#
[heater_bed]
sensor_type: Generic 3950
#max_power: 1
#min_temp: 0
#max_temp: 120

#-------------------------#
# config/hardware/filament_sensors/motion_sensor.cfg
#-------------------------#
#[filament_motion_sensor runout_sensor]
#switch_pin: RUNOUT_SENSOR
#switch_pin: MCU_STOP7
#detection_length: 7.0
#pause_on_runout: True
#runout_gcode:
#insert_gcode:
#event_delay:
#pause_delay:

[filament_motion_sensor encoder_sensor] 
switch_pin: ^PG13
#detection_length: 2.88 # accuracy of motion sensor 2.88mm, min required distance
detection_length: 10
extruder: extruder 
pause_on_runout: False 
runout_gcode:
	PAUSE # [pause_resume] is required in printer.cfg 
	M117 Filament encoder runout insert_gcode: M117 Filament encoder inserted

[filament_switch_sensor switch_sensor] 
switch_pin: ^PG12 
pause_on_runout: False 
runout_gcode: 
	PAUSE # [pause_resume] is required in printer.cfg 
	M117 Filament switch runout 
insert_gcode: M117 Filament switch inserted 



#-------------------------#
# config/hardware/filters/exhaust_filter.cfg
#-------------------------#
[heater_fan exhaust_filter]
#pin: EXHAUST_FAN
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
fan_speed: .6

#-------------------------#
# bed_fans.cfg
#-------------------------#
[include bed_fans.cfg]


[verify_heater heater_bed]
max_error: 120
#   The maximum "cumulative temperature error" before raising an
#   error. Smaller values result in stricter checking and larger
#   values allow for more time before an error is reported.
#   Specifically, the temperature is inspected once a second and if it
#   is close to the target temperature then an internal "error
#   counter" is reset; otherwise, if the temperature is below the
#   target range then the counter is increased by the amount the
#   reported temperature differs from that range. Should the counter
#   exceed this "max_error" then an error is raised. The default is
#   120.
check_gain_time: 120
#   This controls heater verification during initial heating. Smaller
#   values result in stricter checking and larger values allow for
#   more time before an error is reported. Specifically, during
#   initial heating, as long as the heater increases in temperature
#   within this time frame (specified in seconds) then the internal
#   "error counter" is reset. The default is 20 seconds for extruders
#   and 60 seconds for heater_bed.
hysteresis: 5
#   The maximum temperature difference (in Celsius) to a target
#   temperature that is considered in range of the target. This
#   controls the max_error range check. It is rare to customize this
#   value. The default is 5.
heating_gain: 2
#   The minimum temperature (in Celsius) that the heater must increase
#   by during the check_gain_time check. It is rare to customize this
#   value. The default is 2.

#-------------------------#




#-------------------------#
#for belt resonance graphs, useful for verifying belt tension and differential belt paths behavior.
#BELTS_SHAPER_CALIBRATION

#for input shaper graphs to mitigate ringing/ghosting by tuning Klipper's input shaper system.
#AXES_SHAPER_CALIBRATION

#for machine vibration graphs to optimize your slicer speed profiles.
#VIBRATIONS_CALIBRATION
